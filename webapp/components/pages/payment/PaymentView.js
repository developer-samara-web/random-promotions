"use client";

import { useState, useEffect } from "react";
import { getUser } from "@/controllers/Users";
import { getTariff } from "@/controllers/Tariffs";
import { getTransaction } from "@/controllers/Transactions";
import Preloader from "@/components/ui/Preloader/Preloader";
import Button from "@/components/ui/Button/Button";
import Success from "@/components/ui/Success/Success";
import Error from "@/components/ui/Error/Error";
import Page from "@/components/ui/Page/Page";
import Image from "next/image";
import Header from "@/components/ui/Header/Header";

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Payment
export default function Payment({ transactionId }) {
    const [isLoading, setIsLoading] = useState(true);
    const [transaction, setTransactionData] = useState(null);
    const [error, setError] = useState(null);

    useEffect(() => {
        if (!transactionId) return;

        const fetchData = async () => {
            try {
                // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
                const { response: transactionData } = await getTransaction(transactionId);
                setTransactionData(transactionData);
            } catch (e) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –æ–ø–ª–∞—Ç–µ:", e);
                setError(e.message);
            } finally {
                setIsLoading(false)
            }
        };

        fetchData();
    }, [transactionId]);

    // –ó–∞–≥—Ä—É–∑–∫–∞
    if (isLoading) {
        return (
            <Page>
                <Preloader title="–ü—Ä–æ–≤–µ—Ä—è—é –¥–∞–Ω–Ω—ã–µ —Ç–∞—Ä–∏—Ñ–æ–≤" />
            </Page>
        );
    }

    // –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ —Å –æ—à–∏–±–∫–æ–π
    return (
        <Page>
            {transaction.status === 'completed' ? (
                <div className="flex flex-col gap-5 justify-between w-full">
                    <Header title="üéâ –£—Å–ø–µ—à–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è" description={`ID: ${transaction._id}`} />
                    <div className="flex flex-col gap-5 items-center w-full">
                        <Image src="/cheerful.png" width="170" height="170" alt="payment-check" />
                        <Success title="üéâ –£—Å–ø–µ—à–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è" description="–°—Ä–µ–¥—Å—Ç–≤–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω—ã, –∏ —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Å–µ—Ä–≤–∏—Å–∞." />
                    </div>
                    <Button name="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª" icon="ArrowLeftCircleIcon" link={process.env.NEXT_PUBLIC_TELEGRAM_BOT_URL} />
                </div>
            ) : transaction.status === 'in_progress' ? (
                <>
                    <Header title="üö´ –û–∂–∏–¥–∞–µ–º –æ–ø–ª–∞—Ç—É" description={`ID: ${transaction._id}`} />
                    <Image src="/pleased.png" width="170" height="170" alt="no-credit-card" />
                    <Success title="–ü–ª–∞—Ç—ë–∂ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ" description="–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –ø–ª–∞—Ç—ë–∂ –∏ —Å–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 1 –¥–æ 5 –º–∏–Ω—É—Ç. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ." />
                    <div className="w-full flex flex-col gap-3">
                        <Button name="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª" icon="ArrowLeftCircleIcon" link={process.env.NEXT_PUBLIC_TELEGRAM_BOT_URL} />
                    </div>
                </>
            ) : (
                <>
                    <Header title="üö´ –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã" description={`ID: ${transaction._id}`} />
                    <Image src="/sad.png" width="170" height="170" alt="no-credit-card" />
                    <Error title="–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã" description="–ú—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ –∏ –¥–µ–ª–∞–µ–º –≤—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã —Ä–µ—à–∏—Ç—å –µ—ë –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏." />
                    <div className="w-full flex flex-col gap-3">
                        <Button name="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª" icon="ArrowLeftCircleIcon" link={process.env.NEXT_PUBLIC_TELEGRAM_BOT_URL} />
                    </div>
                </>
            )}
        </Page>
    )
}