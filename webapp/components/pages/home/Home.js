"use client"

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { useEffect, useState } from 'react';
import { getPromotion } from "@/controllers/Promotions";
import { getUser } from "@/controllers/Users";
import { setUserToPromotion } from "@/controllers/Users";
import checkLimit  from "@/utils/checkLimit";
import Page from "@/components/ui/Page/Page";
import Header from "@/components/ui/Header/Header";
import Promotion from "@/components/ui/Promotion/Promotion";
import Block from "@/components/ui/Block/Block";
import Preloader from '@/components/ui/Preloader/Preloader';
import Success from "@/components/ui/Success/Success";
import Error from "@/components/ui/Error/Error";
import Button from "@/components/ui/Button/Button";
import Image from "next/image"

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç
export default function Home({ searchParams }) {
    const [isLoading, setIsLoading] = useState(true);
    const [promotion, setPromotion] = useState(null);
    const [success, setSuccess] = useState(false);
    const [error, setError] = useState(null);

    // –ü–æ–ª—É—á–∞–µ–º id –∞–∫—Ü–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { promotion_id, telegram_id } = searchParams;

    useEffect(() => {
        const fetchData = async () => {
            try {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                if (!promotion_id || !telegram_id) {
                    throw { message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω.' };
                }

                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const fetchedUser = await getUser(telegram_id);
                if (fetchedUser.error) {
                    throw new Error(fetchedUser.error);
                }

                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏
                const fetchedPromotion = await getPromotion(promotion_id);
                if (fetchedPromotion.error) {
                    throw { message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–∏. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω.' };
                }
                setPromotion(fetchedPromotion.response);

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞–∫—Ü–∏–∏
                if (!fetchedPromotion.response.is_published) {
                    throw { message: '–ê–∫—Ü–∏—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω.' };
                }

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if (fetchedPromotion.response.subscribe && !fetchedUser.response.is_subscription) {
                    throw {
                        message: '–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è —É –≤–∞—Å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ ‚≠êÔ∏è –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞! \n–î–∞–Ω–Ω–∞—è –†–∞–∑–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è ‚≠êÔ∏è –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞. ü§©–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤—Å–µ–≥–æ –∑–∞ 1 —Ä—É–±–ª—å!',
                        buttons: { name: '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', url: process.env.NEXT_PUBLIC_TELEGRAM_BOT_URL, icon: 'ArrowRightCircleIcon' }
                    };
                }

                if (!fetchedUser.response.subscribe_channel) {
                    throw {
                        message: 'üöÄ –•–æ—Ç–∏—Ç–µ –≤—ã–∏–≥—Ä–∞—Ç—å –ø—Ä–∏–∑? –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª! –¢–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö ‚Äî –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ–π —à–∞–Ω—Å!',
                        buttons: { name: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url: process.env.NEXT_PUBLIC_TELEGRAM_CHANEL_URL, icon: 'ArrowRightCircleIcon' }
                    };
                }

                if (checkLimit(fetchedUser.response) >= fetchedUser.response.free_limit && !fetchedUser.response.is_subscription) {
                    throw {
                        message: '–£–ø—Å! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –æ–±—ã—á–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–≥–æ 2 —É—á–∞—Å—Ç–∏—è –≤ –†–∞–∑–¥–∞—á–∞—Ö –≤ –º–µ—Å—è—Ü. –ß—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –∫–∞–Ω–∞–ª–∞ - –≤–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å ‚≠êÔ∏è –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–º! ü§©–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤—Å–µ–≥–æ –∑–∞ 1 —Ä—É–±–ª—å!',
                        buttons: { name: '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', url: process.env.NEXT_PUBLIC_TELEGRAM_BOT_URL, icon: 'ArrowRightCircleIcon' }
                    };
                }

                if (fetchedPromotion.response.participants.find(item => item.user === fetchedUser.response._id)) {
                    setSuccess(`–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –†–∞–∑–¥–∞—á–µ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç ${fetchedPromotion.response.end_time} –¢–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –∂–¥–∞—Ç—å...`);
                }
            } catch (err) {
                setError(err);
            } finally {
                setIsLoading(false);
            }
        };

        fetchData();
    }, [telegram_id, promotion_id]);

    // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    if (isLoading) {
        return (
            <Page>
                <Preloader />
            </Page>
        );
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞
    if (error) {
        return (
            <Page>
                <Error title="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞" description={error.message} />
                {error.buttons && <Button link={error.buttons.url} name={error.buttons.name} icon={error.buttons.icon} />}
            </Page>
        );
    }

    // –ü—Ä–∏ —É–¥–∞—á–Ω–æ–º —É—á–∞—Å—Ç–∏–∏
    if (success) {
        return (
            <Page>
                <Header title={`–†–∞–∑–¥–∞—á–∞ #${promotion._id}`} />
                <Success title="‚úÖ –í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–∞–∑–¥–∞—á–µ!" />
                <Image src="/pending.png" width={200} height={200} alt={promotion._id} />
                <Block className="flex flex-col gap-2">
                    <b>üìÖ –ò—Ç–æ–≥–∏ –±—É–¥—É—Ç –ø–æ–¥–≤–µ–¥–µ–Ω—ã:<br></br>
                        ‚úÖ {promotion.end_time}.</b>
                </Block>
            </Page>
        );
    }

    // –£—Å–ø–µ—à–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä
    return (
        <Page>
            <Header title={`–ê–∫—Ü–∏—è #${promotion._id}`} />
            <Promotion name={promotion.name} description={promotion.description} image={promotion.image} status={promotion.is_published} subscribe={promotion.subscribe} />
            <Button name="–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ" icon="CheckCircleIcon" event={() => setUserToPromotion(telegram_id, promotion_id, setSuccess, promotion.end_time)} />
        </Page>
    );
}