// –ò–º–ø–æ—Ä—Ç
import formatDate from "#utils/formatDate.js";

function parseMicrosoftJsonDate(dateStr) {
    const timestamp = parseInt(dateStr.match(/\d+/)[0]);
    return new Date(timestamp);
}

// –°–æ–æ–±—â–µ–Ω–∏–µ "–£–¥–∞—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞"
export function PaymentSuccessMessage(date) {
    return (`<b>üéâ  –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ PREMIUM</b>\n\n–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã. –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, –≤–∞—à–∞ –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ <b>–¥–æ: ${parseMicrosoftJsonDate(date).toLocaleString()}</b>.`);
}

// –°–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ—É–¥–∞—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞"
export function PaymentErrorMessage() {
    return (`<b>‚ö†Ô∏è  –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ–ø–ª–∞—Ç–∞ PREMIUM –Ω–µ —É–¥–∞–ª–∞—Å—å</b>\n\n–ú—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:\n\n- –í–∞—à—É –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫.\n- –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–µ.\n- –ü–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –≤–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\n\n–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ${process.env.TELEGRAM_SUPPORT}.`);
}